package toleco.view.gui;

import java.awt.Graphics2D;
import java.awt.RenderingHints;
import java.awt.image.BufferedImage;
import javax.swing.ImageIcon;
import toleco.terrain.Terrain;

/**
 * Displays information about the currently selected terrain inclusing name, move cost,
 * and defense bonus.
 *
 * @author Matt Tognetti
 * @version 1.0
 *
 */
public class TerrainSelected extends javax.swing.JPanel
{

    /** 
     * Creates new form TerrainSelected
     */
    public TerrainSelected()
    {
        initComponents();
    }

    /**
     * Displays information about the currently selected terrain, including
     * name, the terrain image, the move cost, and the defense modifier.
     *
     * @param terrain the currently selected terrain
     * @param terrainImage the image representing the currently selected terrain
     */
    public void setTerrain(Terrain terrain, BufferedImage terrainImage)
    {
        //width of the scaled image
        final int kWidth = 80;
        //height of the scaled image
        final int kHeight = 80;
        //sign of the defense modifier
        String modSign = "";

        //SET terrain name
        terrainName.setText(terrain.getType());
        //Scale the image to fit the portrait
        BufferedImage scaledImage = new BufferedImage(kWidth, kHeight,
                BufferedImage.TYPE_INT_RGB);
        //INIT Graphics2D by calling createGraphics on scaledImage
        Graphics2D graphics2D = scaledImage.createGraphics();
        //CALL setRenderingHint with hints KEY_INTERPOLATION and
        //VALUE_INTERPOLATION_BILINEAR
        graphics2D.setRenderingHint(RenderingHints.KEY_INTERPOLATION,
                RenderingHints.VALUE_INTERPOLATION_BILINEAR);
        //draw the iamge
        graphics2D.drawImage(terrainImage, 0, 0, kWidth, kHeight, null);
        //SET terrain icon
        terrainPortrait.setIcon(new ImageIcon(scaledImage));
        //SET move cost
        movePoints.setText("" + terrain.getMoveCost());
        //IF the defense modifier is greater than 0
        if ( terrain.getDefMod() > 0 )
        {
            //SET modSign to +
            modSign = "+";
        }
        //END IF
        //SET defense modifier text
        defenseBonus.setText("" + modSign +terrain.getDefMod());
    }

    //CHECKSTYLE:OFF - Ignore generated code.
    // Authorized by Dr. Dalbey.

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        defenseLabel = new javax.swing.JLabel();
        movePoints = new javax.swing.JLabel();
        moveLabel = new javax.swing.JLabel();
        defenseBonus = new javax.swing.JLabel();
        terrainName = new javax.swing.JLabel();
        terrainPortrait = new javax.swing.JLabel();

        setPreferredSize(new java.awt.Dimension(200, 300));

        defenseLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        defenseLabel.setText("Defense Bonus");
        defenseLabel.setPreferredSize(new java.awt.Dimension(44, 25));

        movePoints.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        movePoints.setText("2");
        movePoints.setPreferredSize(new java.awt.Dimension(44, 20));

        moveLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        moveLabel.setText("Move Cost");
        moveLabel.setPreferredSize(new java.awt.Dimension(44, 25));

        defenseBonus.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        defenseBonus.setText("+1");
        defenseBonus.setPreferredSize(new java.awt.Dimension(44, 25));

        terrainName.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        terrainName.setText("Name");
        terrainName.setPreferredSize(new java.awt.Dimension(44, 30));

        terrainPortrait.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        terrainPortrait.setPreferredSize(new java.awt.Dimension(80, 80));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(defenseBonus, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 176, Short.MAX_VALUE)
                            .addComponent(defenseLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 176, Short.MAX_VALUE)
                            .addComponent(movePoints, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 176, Short.MAX_VALUE)
                            .addComponent(moveLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 176, Short.MAX_VALUE)
                            .addComponent(terrainName, javax.swing.GroupLayout.DEFAULT_SIZE, 176, Short.MAX_VALUE))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(terrainPortrait, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(57, 57, 57))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(terrainName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(terrainPortrait, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(moveLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(movePoints, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(defenseLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(defenseBonus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(17, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel defenseBonus;
    private javax.swing.JLabel defenseLabel;
    private javax.swing.JLabel moveLabel;
    private javax.swing.JLabel movePoints;
    private javax.swing.JLabel terrainName;
    private javax.swing.JLabel terrainPortrait;
    // End of variables declaration//GEN-END:variables

    //CHECKSTYLE:ON
}
